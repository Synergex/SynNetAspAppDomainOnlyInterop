<?xml version='1.0'?>
<!--Generated by xmldoc v10.2.3i on 29 AUG 2014 13:20:52-->
<doc>
  <assembly>
    <name>BusinessLogic</name>
  </assembly>
  <members>
    <member name="T:BusinessLogic.Method_status">
       <summary>
       Enumeration BusinessLogicTmp
       </summary>
    </member>
    <member name="T:BusinessLogic.Part">
       <summary>
       Structural Interface Class BusinessLogicTmp
       </summary>
    </member>
    <member name="P:BusinessLogic.Part.Id">
       <summary>
       part ID
       </summary>
    </member>
    <member name="P:BusinessLogic.Part.Groupid">
       <summary>
       Group ID
       </summary>
    </member>
    <member name="P:BusinessLogic.Part.Supplierid">
       <summary>
       supplier id
       </summary>
    </member>
    <member name="P:BusinessLogic.Part.Description">
       <summary>
       Description
       </summary>
    </member>
    <member name="P:BusinessLogic.Part.Technical_info">
       <summary>
       Technical info
       </summary>
    </member>
    <member name="P:BusinessLogic.Part.Quantity">
       <summary>
       quantity in stock
       </summary>
    </member>
    <member name="P:BusinessLogic.Part.Cost_price">
       <summary>
       cost price
       </summary>
    </member>
    <member name="P:BusinessLogic.Part.Spare">
       <summary>
       *** Field To Do ***
       </summary>
    </member>
    <member name="M:BusinessLogic.Part.Clone">
       <summary>
       structure clone
       </summary>
    </member>
    <member name="P:BusinessLogic.Part.Original">
       <summary>
       Used to store a copy of the original structure
       </summary>
    </member>
    <member name="M:BusinessLogic.Part.Equals(BusinessLogic.Part)">
       <summary>
       structure equals
       </summary>
    </member>
    <member name="P:BusinessLogic.Part.Changed">
       <summary>
       Structure Changed 
       </summary>
       <returns>true if structure has been changed</returns>
    </member>
    <member name="M:BusinessLogic.Part.StructToSynergy">
       <summary>
       Serialize a structure to a string
       </summary>
    </member>
    <member name="M:BusinessLogic.Part.SynergyToStruct(Synergex.SynergyDE.a)">
       <summary>
       Serialize a Synergy structure to a .NET structure
       </summary>
    </member>
    <member name="T:BusinessLogic.Product_group">
       <summary>
       Structural Interface Class BusinessLogicTmp
       </summary>
    </member>
    <member name="P:BusinessLogic.Product_group.Group_id">
       <summary>
       group id
       </summary>
    </member>
    <member name="P:BusinessLogic.Product_group.Description">
       <summary>
       description
       </summary>
    </member>
    <member name="M:BusinessLogic.Product_group.Clone">
       <summary>
       structure clone
       </summary>
    </member>
    <member name="P:BusinessLogic.Product_group.Original">
       <summary>
       Used to store a copy of the original structure
       </summary>
    </member>
    <member name="M:BusinessLogic.Product_group.Equals(BusinessLogic.Product_group)">
       <summary>
       structure equals
       </summary>
    </member>
    <member name="P:BusinessLogic.Product_group.Changed">
       <summary>
       Structure Changed 
       </summary>
       <returns>true if structure has been changed</returns>
    </member>
    <member name="M:BusinessLogic.Product_group.StructToSynergy">
       <summary>
       Serialize a structure to a string
       </summary>
    </member>
    <member name="M:BusinessLogic.Product_group.SynergyToStruct(Synergex.SynergyDE.a)">
       <summary>
       Serialize a Synergy structure to a .NET structure
       </summary>
    </member>
    <member name="T:BusinessLogic.Services">
       <summary>
       Procedural Interface Class BusinessLogicTmp
       </summary>
    </member>
    <member name="M:BusinessLogic.Services.#ctor">
       <summary>
       constructor
       </summary>
    </member>
    <member name="M:BusinessLogic.Services.Login(System.String,System.String,System.String)">
       <summary>
       *** To Do ***
       </summary>
       <param name="userName"></param>
       <param name="password"></param>
       <param name="message"></param>
       <returns></returns>
    </member>
    <member name="M:BusinessLogic.Services.GetProductGroupParts(System.String,System.Collections.Generic.List{Part})">
       <summary>
       *** To Do ***
       </summary>
       <param name="aGroupId"></param>
       <param name="aParts"></param>
       <returns></returns>
    </member>
    <member name="M:BusinessLogic.Services.CreatePart(BusinessLogic.Part)">
       <summary>
       *** To Do ***
       </summary>
       <param name="aPart"></param>
       <returns></returns>
    </member>
    <member name="M:BusinessLogic.Services.ReadAllParts(System.Collections.Generic.List{Part})">
       <summary>
       *** To Do ***
       </summary>
       <param name="aParts"></param>
       <returns></returns>
    </member>
    <member name="M:BusinessLogic.Services.ReadPart(System.String,BusinessLogic.Part,System.String)">
       <summary>
       *** To Do ***
       </summary>
       <param name="aId"></param>
       <param name="aPart"></param>
       <param name="aGrfa"></param>
       <returns></returns>
    </member>
    <member name="M:BusinessLogic.Services.UpdatePart(BusinessLogic.Part,System.String)">
       <summary>
       *** To Do ***
       </summary>
       <param name="aPart"></param>
       <param name="aGrfa"></param>
       <returns></returns>
    </member>
    <member name="M:BusinessLogic.Services.DeletePart(System.String)">
       <summary>
       *** To Do ***
       </summary>
       <param name="aGrfa"></param>
       <returns></returns>
    </member>
    <member name="M:BusinessLogic.Services.PartExists(System.String)">
       <summary>
       *** To Do ***
       </summary>
       <param name="aId"></param>
       <returns></returns>
    </member>
    <member name="M:BusinessLogic.Services.CreateProductGroup(BusinessLogic.Product_group)">
       <summary>
       *** To Do ***
       </summary>
       <param name="aProductGroup"></param>
       <returns></returns>
    </member>
    <member name="M:BusinessLogic.Services.ReadAllProductGroups(System.Collections.Generic.List{Product_group})">
       <summary>
       *** To Do ***
       </summary>
       <param name="aProductGroups"></param>
       <returns></returns>
    </member>
    <member name="M:BusinessLogic.Services.ReadProductGroup(System.String,BusinessLogic.Product_group,System.String)">
       <summary>
       *** To Do ***
       </summary>
       <param name="aGroupId"></param>
       <param name="aProductGroup"></param>
       <param name="aGrfa"></param>
       <returns></returns>
    </member>
    <member name="M:BusinessLogic.Services.UpdateProductGroup(BusinessLogic.Product_group,System.String)">
       <summary>
       *** To Do ***
       </summary>
       <param name="aProductGroup"></param>
       <param name="aGrfa"></param>
       <returns></returns>
    </member>
    <member name="M:BusinessLogic.Services.DeleteProductGroup(System.String)">
       <summary>
       *** To Do ***
       </summary>
       <param name="aGrfa"></param>
       <returns></returns>
    </member>
    <member name="M:BusinessLogic.Services.ProductGroupExists(System.String)">
       <summary>
       *** To Do ***
       </summary>
       <param name="aGroupId"></param>
       <returns></returns>
    </member>
    <member name="M:BusinessLogic.Services.CreateSupplier(BusinessLogic.Supplier)">
       <summary>
       *** To Do ***
       </summary>
       <param name="aSupplier"></param>
       <returns></returns>
    </member>
    <member name="M:BusinessLogic.Services.ReadAllSuppliers(System.Collections.Generic.List{Supplier})">
       <summary>
       *** To Do ***
       </summary>
       <param name="aSuppliers"></param>
       <returns></returns>
    </member>
    <member name="M:BusinessLogic.Services.ReadSupplier(System.String,BusinessLogic.Supplier,System.String)">
       <summary>
       *** To Do ***
       </summary>
       <param name="aSupplierId"></param>
       <param name="aSupplier"></param>
       <param name="aGrfa"></param>
       <returns></returns>
    </member>
    <member name="M:BusinessLogic.Services.UpdateSupplier(BusinessLogic.Supplier,System.String)">
       <summary>
       *** To Do ***
       </summary>
       <param name="aSupplier"></param>
       <param name="aGrfa"></param>
       <returns></returns>
    </member>
    <member name="M:BusinessLogic.Services.DeleteSupplier(System.String)">
       <summary>
       *** To Do ***
       </summary>
       <param name="aGrfa"></param>
       <returns></returns>
    </member>
    <member name="M:BusinessLogic.Services.SupplierExists(System.String)">
       <summary>
       *** To Do ***
       </summary>
       <param name="aSupplierId"></param>
       <returns></returns>
    </member>
    <member name="M:BusinessLogic.Services.connect">
       <summary>
       connect to xfServerPlus
       </summary>
    </member>
    <member name="M:BusinessLogic.Services.connect(System.String,System.Int32,System.Int32,System.Int32)">
       <summary>
       xfServerPlus four parameter connect
       </summary>
       <param name="hostIP">IP address</param>
       <param name="hostPort">port number</param>
       <param name="minPort">minport number</param>
       <param name="maxPort">maxport number</param>
    </member>
    <member name="M:BusinessLogic.Services.connect(System.String,System.Int32)">
       <summary>
       xfServerPlus host and port connect
       </summary>
       <param name="hostIP">IP address</param>
       <param name="hostPort">port number</param>
    </member>
    <member name="M:BusinessLogic.Services.disconnect">
       <summary>
       disconnect from xfServerPlus
       </summary>
    </member>
    <member name="M:BusinessLogic.Services.setCallTimeout(System.Int32)">
       <summary>
       set the call timeout in seconds
       </summary>
       <param name="seconds">timeout in seconds</param>
    </member>
    <member name="M:BusinessLogic.Services.setUserString(System.String)">
       <summary>
       set the user string
       </summary>
       <param name="userString">The user string</param>
    </member>
    <member name="M:BusinessLogic.Services.getUserString(System.String)">
       <summary>
       get the user string 
       </summary>
       <returns>User String</returns>
    </member>
    <member name="T:BusinessLogic.Supplier">
       <summary>
       Structural Interface Class BusinessLogicTmp
       </summary>
    </member>
    <member name="P:BusinessLogic.Supplier.Supplier_id">
       <summary>
       supplier id
       </summary>
    </member>
    <member name="P:BusinessLogic.Supplier.Name">
       <summary>
       supplier name
       </summary>
    </member>
    <member name="P:BusinessLogic.Supplier.Address_1">
       <summary>
       addrss line 1
       </summary>
    </member>
    <member name="P:BusinessLogic.Supplier.Address_2">
       <summary>
       address line 2
       </summary>
    </member>
    <member name="P:BusinessLogic.Supplier.Address_3">
       <summary>
       address line 3
       </summary>
    </member>
    <member name="P:BusinessLogic.Supplier.City">
       <summary>
       city
       </summary>
    </member>
    <member name="P:BusinessLogic.Supplier.Postal_code">
       <summary>
       post code
       </summary>
    </member>
    <member name="P:BusinessLogic.Supplier.Web_address">
       <summary>
       web address
       </summary>
    </member>
    <member name="P:BusinessLogic.Supplier.Spare">
       <summary>
       spare
       </summary>
    </member>
    <member name="M:BusinessLogic.Supplier.Clone">
       <summary>
       structure clone
       </summary>
    </member>
    <member name="P:BusinessLogic.Supplier.Original">
       <summary>
       Used to store a copy of the original structure
       </summary>
    </member>
    <member name="M:BusinessLogic.Supplier.Equals(BusinessLogic.Supplier)">
       <summary>
       structure equals
       </summary>
    </member>
    <member name="P:BusinessLogic.Supplier.Changed">
       <summary>
       Structure Changed 
       </summary>
       <returns>true if structure has been changed</returns>
    </member>
    <member name="M:BusinessLogic.Supplier.StructToSynergy">
       <summary>
       Serialize a structure to a string
       </summary>
    </member>
    <member name="M:BusinessLogic.Supplier.SynergyToStruct(Synergex.SynergyDE.a)">
       <summary>
       Serialize a Synergy structure to a .NET structure
       </summary>
    </member>
  </members>
</doc>
